
var strings = ['"', "'", "`"];
var space = ' ';

function splitString(str){
    var i = 0;
    var char = null;
    var stringChar = null;
    var result = [[]];
    var last = result[0];
    while(i < str.length){
        char = str[i];
        last = result[result.length - 1];
        
        if(!stringChar){
            if(char === space){
                result.push([]);
            }
            else if(strings.indexOf(char) > -1){
                stringChar = char;
                result.push([char]);
            }
            else{
                last.push(char);
            }
        }
        else{
            if(stringChar === char){
                stringChar = null;
                last.push(char);
            }
            else{
                last.push(char);
            }
        }
        i++;
    }
    return result.filter(t => t.length).map(t => t.join(''));
}

module.exports = {
    name: 'core.bot.exec',
    init(definition, done){

        const core = this;
        const here = process.cwd();
        const { spawn } = require('child_process');
        const defaults = { 
            cwd: here,
            stdio: ['pipe', process.stdout, process.stderr]
        }

        function exec(com, args, options, done){
            spawn(com, args, Object.assign({}, defaults, options)).on('close', done);
        }
        

        core.extend({
            exec(command, options, callback){
                if(typeof command === 'string'){
                    command = splitString(command);
                }
                var name = command.shift();
                if(!options){
                    return exec(name, command, {}, function(){});
                }
                if(typeof options === 'function'){
                    return exec(name, command, {}, options);
                }
                return exec(name, command, options, callback || function(){});
            }
        });

        done();
    }
};